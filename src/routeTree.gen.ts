/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as Presentation4AdvancedFeaturesImport } from './routes/presentation/4-advanced-features'
import { Route as Presentation3CommonUseCasesImport } from './routes/presentation/3-common-use-cases'
import { Route as Presentation2CoreConceptsImport } from './routes/presentation/2-core-concepts'
import { Route as Presentation1IntroImport } from './routes/presentation/1-intro'
import { Route as FormZodImport } from './routes/form/zod'
import { Route as FormVanillaImport } from './routes/form/vanilla'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const Presentation4AdvancedFeaturesRoute =
  Presentation4AdvancedFeaturesImport.update({
    id: '/presentation/4-advanced-features',
    path: '/presentation/4-advanced-features',
    getParentRoute: () => rootRoute,
  } as any)

const Presentation3CommonUseCasesRoute =
  Presentation3CommonUseCasesImport.update({
    id: '/presentation/3-common-use-cases',
    path: '/presentation/3-common-use-cases',
    getParentRoute: () => rootRoute,
  } as any)

const Presentation2CoreConceptsRoute = Presentation2CoreConceptsImport.update({
  id: '/presentation/2-core-concepts',
  path: '/presentation/2-core-concepts',
  getParentRoute: () => rootRoute,
} as any)

const Presentation1IntroRoute = Presentation1IntroImport.update({
  id: '/presentation/1-intro',
  path: '/presentation/1-intro',
  getParentRoute: () => rootRoute,
} as any)

const FormZodRoute = FormZodImport.update({
  id: '/form/zod',
  path: '/form/zod',
  getParentRoute: () => rootRoute,
} as any)

const FormVanillaRoute = FormVanillaImport.update({
  id: '/form/vanilla',
  path: '/form/vanilla',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/form/vanilla': {
      id: '/form/vanilla'
      path: '/form/vanilla'
      fullPath: '/form/vanilla'
      preLoaderRoute: typeof FormVanillaImport
      parentRoute: typeof rootRoute
    }
    '/form/zod': {
      id: '/form/zod'
      path: '/form/zod'
      fullPath: '/form/zod'
      preLoaderRoute: typeof FormZodImport
      parentRoute: typeof rootRoute
    }
    '/presentation/1-intro': {
      id: '/presentation/1-intro'
      path: '/presentation/1-intro'
      fullPath: '/presentation/1-intro'
      preLoaderRoute: typeof Presentation1IntroImport
      parentRoute: typeof rootRoute
    }
    '/presentation/2-core-concepts': {
      id: '/presentation/2-core-concepts'
      path: '/presentation/2-core-concepts'
      fullPath: '/presentation/2-core-concepts'
      preLoaderRoute: typeof Presentation2CoreConceptsImport
      parentRoute: typeof rootRoute
    }
    '/presentation/3-common-use-cases': {
      id: '/presentation/3-common-use-cases'
      path: '/presentation/3-common-use-cases'
      fullPath: '/presentation/3-common-use-cases'
      preLoaderRoute: typeof Presentation3CommonUseCasesImport
      parentRoute: typeof rootRoute
    }
    '/presentation/4-advanced-features': {
      id: '/presentation/4-advanced-features'
      path: '/presentation/4-advanced-features'
      fullPath: '/presentation/4-advanced-features'
      preLoaderRoute: typeof Presentation4AdvancedFeaturesImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/form/vanilla': typeof FormVanillaRoute
  '/form/zod': typeof FormZodRoute
  '/presentation/1-intro': typeof Presentation1IntroRoute
  '/presentation/2-core-concepts': typeof Presentation2CoreConceptsRoute
  '/presentation/3-common-use-cases': typeof Presentation3CommonUseCasesRoute
  '/presentation/4-advanced-features': typeof Presentation4AdvancedFeaturesRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/form/vanilla': typeof FormVanillaRoute
  '/form/zod': typeof FormZodRoute
  '/presentation/1-intro': typeof Presentation1IntroRoute
  '/presentation/2-core-concepts': typeof Presentation2CoreConceptsRoute
  '/presentation/3-common-use-cases': typeof Presentation3CommonUseCasesRoute
  '/presentation/4-advanced-features': typeof Presentation4AdvancedFeaturesRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/form/vanilla': typeof FormVanillaRoute
  '/form/zod': typeof FormZodRoute
  '/presentation/1-intro': typeof Presentation1IntroRoute
  '/presentation/2-core-concepts': typeof Presentation2CoreConceptsRoute
  '/presentation/3-common-use-cases': typeof Presentation3CommonUseCasesRoute
  '/presentation/4-advanced-features': typeof Presentation4AdvancedFeaturesRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/form/vanilla'
    | '/form/zod'
    | '/presentation/1-intro'
    | '/presentation/2-core-concepts'
    | '/presentation/3-common-use-cases'
    | '/presentation/4-advanced-features'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/form/vanilla'
    | '/form/zod'
    | '/presentation/1-intro'
    | '/presentation/2-core-concepts'
    | '/presentation/3-common-use-cases'
    | '/presentation/4-advanced-features'
  id:
    | '__root__'
    | '/'
    | '/form/vanilla'
    | '/form/zod'
    | '/presentation/1-intro'
    | '/presentation/2-core-concepts'
    | '/presentation/3-common-use-cases'
    | '/presentation/4-advanced-features'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FormVanillaRoute: typeof FormVanillaRoute
  FormZodRoute: typeof FormZodRoute
  Presentation1IntroRoute: typeof Presentation1IntroRoute
  Presentation2CoreConceptsRoute: typeof Presentation2CoreConceptsRoute
  Presentation3CommonUseCasesRoute: typeof Presentation3CommonUseCasesRoute
  Presentation4AdvancedFeaturesRoute: typeof Presentation4AdvancedFeaturesRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FormVanillaRoute: FormVanillaRoute,
  FormZodRoute: FormZodRoute,
  Presentation1IntroRoute: Presentation1IntroRoute,
  Presentation2CoreConceptsRoute: Presentation2CoreConceptsRoute,
  Presentation3CommonUseCasesRoute: Presentation3CommonUseCasesRoute,
  Presentation4AdvancedFeaturesRoute: Presentation4AdvancedFeaturesRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/form/vanilla",
        "/form/zod",
        "/presentation/1-intro",
        "/presentation/2-core-concepts",
        "/presentation/3-common-use-cases",
        "/presentation/4-advanced-features"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/form/vanilla": {
      "filePath": "form/vanilla.tsx"
    },
    "/form/zod": {
      "filePath": "form/zod.tsx"
    },
    "/presentation/1-intro": {
      "filePath": "presentation/1-intro.tsx"
    },
    "/presentation/2-core-concepts": {
      "filePath": "presentation/2-core-concepts.tsx"
    },
    "/presentation/3-common-use-cases": {
      "filePath": "presentation/3-common-use-cases.tsx"
    },
    "/presentation/4-advanced-features": {
      "filePath": "presentation/4-advanced-features.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
